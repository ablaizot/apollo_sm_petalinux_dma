# Copyright (C) 2023 Advanced Micro Devices, Inc.  All rights reserved.
include(CheckSymbolExists)

collector_list  (_list PROJECT_INC_DIRS)
include_directories (${_list} ${CMAKE_CURRENT_SOURCE_DIR})

collector_list  (_list PROJECT_LIB_DIRS)
link_directories (${_list})

find_library(LIBMETAL_LIB NAMES metal HINTS "${LIBMETAL_DIR}/lib")
link_directories(${LIBMETAL_LIB})

if (PROJECT_SYSTEM STREQUAL "freertos")
  collect(PROJECT_LIB_DEPS freertos)
endif()
collect(PROJECT_LIB_DEPS xilstandalone)
collect(PROJECT_LIB_DEPS xilstandalone)

collect(PROJECT_LIB_DEPS xiltimer)
collector_list (_deps PROJECT_LIB_DEPS)

set (_linker_script ${CMAKE_CURRENT_SOURCE_DIR}/lscript.ld)

set (_src_common ${CMAKE_CURRENT_SOURCE_DIR}/init_${PROJECT_SYSTEM}.c)
set (_app0 ${CMAKE_PROJECT_NAME})
set (_src0 ${CMAKE_CURRENT_SOURCE_DIR}/libmetal_amp_demod.c)
list(APPEND _src0 ${CMAKE_CURRENT_SOURCE_DIR}/sys_init.c)
list(APPEND _src0 ${CMAKE_CURRENT_SOURCE_DIR}/shmem_demod.c)
list(APPEND _src0 ${CMAKE_CURRENT_SOURCE_DIR}/shmem_atomic_demod.c)
list(APPEND _src0 ${CMAKE_CURRENT_SOURCE_DIR}/ipi_shmem_demod.c)
list(APPEND _src0 ${CMAKE_CURRENT_SOURCE_DIR}/ipi_latency_demod.c)
list(APPEND _src0 ${CMAKE_CURRENT_SOURCE_DIR}/shmem_latency_demod.c)
list(APPEND _src0 ${CMAKE_CURRENT_SOURCE_DIR}/shmem_throughput_demod.c)

include(CheckSymbolExists)
check_symbol_exists(versal "bspconfig.h" IS_VERSAL)
check_symbol_exists(VERSAL_NET "xparameters_ps.h" IS_VERSAL_NET)
if (IS_VERSAL)
    set (SOC_FAMILY "versal")
elseif(IS_VERSAL_NET)
    set (SOC_FAMILY "versalnet")
else()
    set (SOC_FAMILY "zynqmp")
endif()

if (SOC_FAMILY STREQUAL "zynqmp")
  add_definitions(-DCONFIG_TTC0_BASE_ADDR=0xff110000)
  add_definitions(-DCONFIG_IPI_BASE_ADDR=0xff310000)
  add_definitions(-DCONFIG_IPI_IRQ_VECT_ID=65 -DCONFIG_IPI_MASK=0x1000000)
  add_definitions(-DCONFIG_TTC_DEV_NAME="ff110000.ttc")
  add_definitions(-DCONFIG_IPI_DEV_NAME="ff310000.ipi")
elseif (SOC_FAMILY STREQUAL "versal")
  add_definitions(-DCONFIG_TTC0_BASE_ADDR=0xFF0E0000)
  add_definitions(-DCONFIG_IPI_BASE_ADDR=0xFF340000)
  add_definitions(-DCONFIG_IPI_IRQ_VECT_ID=63 -DCONFIG_IPI_MASK=0x0000020)
  add_definitions(-DCONFIG_TTC_DEV_NAME="ff0e0000.ttc")
  add_definitions(-DCONFIG_IPI_DEV_NAME="ff340000.ipi")
elseif (SOC_FAMILY STREQUAL "versalnet")
  add_definitions(-DCONFIG_TTC0_BASE_ADDR=0xFD1C0000)
  add_definitions(-DCONFIG_IPI_BASE_ADDR=0xEB340000)
  add_definitions(-DCONFIG_IPI_IRQ_VECT_ID=90 -DCONFIG_IPI_MASK=0x0000020)
  add_definitions(-DCONFIG_TTC_DEV_NAME="fd1c0000.ttc")
  add_definitions(-DCONFIG_IPI_DEV_NAME="eb340000.ipi")
endif (SOC_FAMILY STREQUAL "zynqmp")

find_library(LIBMETAL_LIB NAMES metal PATHS ${CMAKE_FIND_ROOT_PATH})
get_filename_component(LIBMETAL_LIB_DIR ${LIBMETAL_LIB} DIRECTORY)
link_directories(${LIBMETAL_LIB_DIR})

get_property (_linker_options GLOBAL PROPERTY TEST_LINKER_OPTIONS)
add_executable (${_app0}.elf ${_src0})
get_property (_ec_flgs GLOBAL PROPERTY "PROJECT_EC_FLAGS")
target_compile_options (${_app0}.elf PUBLIC ${_ec_flgs} -L${LIBMETAL_LIB})


target_link_libraries(${_app0}.elf   -Wl,-Map=${_app0}.map -Wl,--gc-sections -T\"${_linker_script}\" -Wl,--start-group  ${_deps}  -Wl,--end-group)
install (TARGETS ${_app0}.elf RUNTIME DESTINATION bin)

# vim: expandtab:ts=2:sw=2:smartindent
